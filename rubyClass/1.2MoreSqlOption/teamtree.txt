// In a car database there is a Sale table with columns, SaleID, CarID, CustomerID, LocationID, SalesRepID, SaleAmount and SaleDate. The database also has a SalesRep table with columns, SalesRepID, FirstName, LastName, SSN, PhoneNumber, StreetAddress, City, State and ZipCode.

// Show all SaleDate, SaleAmount, and SalesRep First and Last name from Sale and SalesRep. Make sure that all Sales appear in results even if there is no SalesRep associated to the sale.

SELECT s.SaleDate, s.SaleAmount, sr.FirstName, sr.LastName
FROM Sale AS s
   LEFT OUTER JOIN SalesRep AS sr
      ON s.SalesRepID = sr.SalesRepID;
<query 1> SET OPERATION <query 2>
Union Operations
One of the more common set operations in SQL is the UNION statement. Use to combine two data sets into one, stacked one on top of the other, unlike an inner join which puts data together side by side.
Union all
Another SQL set operation, UNION ALL, is almost the same as UNION, but will not eliminate duplicates.

INTERSECT is similar to an Inner Join. As with a UNION, they must have the same columns in both the left and right side of the SQL operation.

EXCEPT uses the same format as INTERSECT, but outputs only the records that are not in the latter table.
//
There are two tables Fruit and Vegetable table. The Fruit table has a FruitID and a Name column and the Vegetable table has a VegetableID and Name column.
Create a distinct result set of fruit and vegetable names.
// Select Name from Fruit UNION select Name from Vegetable;
There are two tables Fruit and Vegetable table. The Fruit table has a FruitID and a Name column and the Vegetable table has a VegetableID and Name column.
Create a list of all fruits and vegetables starting with the letters A through K . In other words all fruit and vegetables that don't start with the letter L to Z.
//SELECT Name FROM Fruit 
  WHERE Name BETWEEN 'A' AND 'L'
UNION 
SELECT Name FROM Vegetable 
  WHERE Name BETWEEN 'A' AND 'L';

There are two tables Fruit and Vegetable table. The Fruit table has a FruitID and a Name column and the Vegetable table has a VegetableID and Name column.
Create a list of fruits and vegetables that includes any potential duplicate values. Ensure that it is in alphabetical order so that the duplicates are next to each other!
// SELECT Name FROM Fruit UNION ALL SELECT Name FROM Vegetable ORDER BY Name;

